<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lqh.practice.sb.mybatis.mapper.CoffeeMapper">
  <resultMap id="BaseResultMap" type="Coffee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="BIGINT" property="price" typeHandler="com.lqh.practice.sb.mybatis.handler.MoneyTypeHandler" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="allColumn">
    `id`, `name`, `price`, `create_time`, `update_time`
  </sql>

  <sql id="columnNoKey">
    `name`, `price`, `create_time`, `update_time`
  </sql>

  <sql id="tableName">`t_coffee`</sql>
  <sql id="selectTable">from <include refid="tableName"/></sql>
  <sql id="updateTable">update <include refid="tableName"/> set</sql>
  <sql id="insertTable">insert into <include refid="tableName"/></sql>
  <sql id="deleteTable">delete from <include refid="tableName"/></sql>

  <sql id="whereKey">where `id` = #{id,jdbcType=BIGINT}</sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="allColumn" />
    <include refid="selectTable" />
    <include refid="whereKey" />
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="allColumn" />
    <include refid="selectTable" />
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <include refid="updateTable" />
    <include refid="whereKey" />
  </delete>


  <insert id="insert" parameterType="Coffee">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      CALL IDENTITY()
    </selectKey>
    <include refid="insertTable" />
    (<include refid="columnNoKey" />)
    values
    (
      #{name,jdbcType=VARCHAR},
      #{price,jdbcType=BIGINT,typeHandler=com.lqh.practice.sb.mybatis.handler.MoneyTypeHandler},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}
    )
  </insert>

  <insert id="insertSelective" parameterType="Coffee">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      CALL IDENTITY()
    </selectKey>
    insert into t_coffee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="price != null">
        `price`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
      <if test="updateTime != null">
        `update_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=BIGINT,typeHandler=com.lqh.practice.sb.mybatis.handler.MoneyTypeHandler},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="Coffee">
    update t_coffee
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        `price` = #{price,jdbcType=BIGINT,typeHandler=com.lqh.practice.sb.mybatis.handler.MoneyTypeHandler},
      </if>
      <if test="createTime != null">
        `create_time` = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        `update_time` = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="Coffee">
    update t_coffee
    set `name` = #{name,jdbcType=VARCHAR},
      `price` = #{price,jdbcType=BIGINT,typeHandler=com.lqh.practice.sb.mybatis.handler.MoneyTypeHandler},
      `create_time` = #{createTime,jdbcType=TIMESTAMP},
      `update_time` = #{updateTime,jdbcType=TIMESTAMP}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
</mapper>